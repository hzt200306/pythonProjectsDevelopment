'''
性能比较和适用场景
    性能差异：C++作为一种编译型语言，通常在执行速度上比Python快。这是因为C++代码在运行前被编译成机器语言，这使得它在执行时更加高效。

    适用场景：Python虽然在执行速度上可能不如C++，但它的易读性和简洁性使得它在快速开发和原型设计方面非常有优势。Python的大量库和框架也使得它在数据分析、机器学习、Web开发等领域非常流行。

    为什么选择Python：在学习编程和处理非性能密集型任务时，Python由于其简单性和广泛的应用范围通常是更好的选择。尽管在性能方面不是最优的，Python的跨平台特性和丰富的
'''


# 下面我们有一个斐波那契数列的生成器
def fibonacci(n):
    # 创建斐波那契数列的魔法列表
    fib_sequence = [0, 1]

    # 当魔法列表的长度小于我们需要的长度时，我们继续施展魔法
    while len(fib_sequence) < n:
        # 每次都向列表添加前两个数字的和
        fib_sequence.append(fib_sequence[-1] + fib_sequence[-2])

    # 返回我们魔法般制作的斐波那契数列
    return fib_sequence


# 打印前N项斐波那契数列
# 让我们看看这个魔法列表的前10个成员是什么样的
N = 10
print(fibonacci(N))
'''
这个Python程序可以在Windows、macOS、Linux等不同操作系统上运行，体现了Python的跨平台特性。Python是一种解释型语言，这意味着它的代码在运行时被解释器直接执行，而不需要先编译成机器语言。这是Python能够轻松跨平台运行的原因之一。
'''
